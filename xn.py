# Obfuscated by the Botpalys encoder
#Time: Mon Jul  7 17:14:27 2025
_ = lambda __ : __import__('base64').urlsafe_b64decode(__[::-1]);exec((_)(b''))